name: ci-billing-processing
on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
 
jobs:
  common-steps:
    name: Build and Test 
    runs-on: ${{matrix.os}}
    strategy: 
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]
    
      steps:
        - name: Setup .NET Core SDK
          uses: actions/setup-dotnet@v1.7.2
          with:
            dotnet-version: '3.1.x'

        - name: Set up JDK 11
          uses: actions/setup-java@v1
          with:
            java-version: 1.11
          
        - uses: actions/checkout@v2
          with:
            fetch-depth: 0 
          
        - name: Cache SonarCloud packages
          uses: actions/cache@v1
          with:
            path: ~\sonar\cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar
          
        - name: Cache SonarCloud scanner
          id: cache-sonar-scanner
          uses: actions/cache@v1
          with:
            path: .\.sonar\scanner
            key: ${{ runner.os }}-sonar-scanner
            restore-keys: ${{ runner.os }}-sonar-scanner 
         
  ci-windows-steps:
    needs: common-steps
    name: os-specific-steps
    runs-on: windows-latest
    
    steps: 
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: bash
        run:  |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
          
      - name: Build and analyze
        if: ${{matrix.os}} == 'windows-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: pwsh
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"IcaroTorres_rabbitmq-billing-processing" /o:"icarotorres" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**.*Tests\coverage.opencover.xml" /d:sonar.coverage.exclusions="**Tests*.cs,**/Infrastructure/**, **/bin/**, **/obj/**"
          dotnet build ScheduledProcessing/ -c Release
          dotnet test ScheduledProcessing/ -c Release --filter Tests.csproj /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=opencover
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  ci-ubuntu-macOS-steps:
    needs: common-steps
    name: os-specific-steps
    runs-on: ${{matrix.os}}
    strategy: 
      matrix:
        os: [ubuntu-latest, macOS-latest]

    steps:          
      - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      run:  mkdir -p sonar/scanner && dotnet tool update dotnet-sonarscanner --tool-path sonar/scanner
          
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        sonar/scanner/dotnet-sonarscanner begin /k:"IcaroTorres_rabbitmq-billing-processing" /o:"icarotorres" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**.*Tests\coverage.opencover.xml" /d:sonar.coverage.exclusions="**Tests*.cs,**/Infrastructure/**, **/bin/**, **/obj/**"
        dotnet build ScheduledProcessing/ -c Release
        dotnet test ScheduledProcessing/ -c Release --filter Tests.csproj /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=opencover
        sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
