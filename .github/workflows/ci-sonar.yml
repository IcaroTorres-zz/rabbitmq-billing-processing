name: ci-sonarcloud
on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
 
jobs:
  sonar-ubuntu:
    name: Test Coverage and Quality Gate
    runs-on: ubuntu-latest
    
    steps:
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1.7.2
      with:
        dotnet-version: '3.1.x'

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
          
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 
          
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
          
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner 

    - name: Install SonarCloud scanner
      shell: bash
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      run:  mkdir -p sonar/scanner && dotnet tool update dotnet-sonarscanner --tool-path sonar/scanner

    - name: Test
      run: mkdir coverage && dotnet test ScheduledProcessing/ -c Release --filter Tests.csproj /p:CollectCoverage=true /p:CoverletOutputFormat=json /p:MergeWith="coverage/result.json" 

    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: bash
      run: |
        sonar/scanner/dotnet-sonarscanner begin /k:"IcaroTorres_rabbitmq-billing-processing" /o:"icarotorres" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="coverage" /d:sonar.coverage.exclusions="**/*Tests.cs"
        dotnet build ScheduledProcessing -c Release
        sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
